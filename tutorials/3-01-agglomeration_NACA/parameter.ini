! =============================================================================== !
! OUTPUT
! =============================================================================== !
projectname   = NACA0012              ! name of the project (used for filenames)
Debugvisu     = T                     ! Write debug mesh to tecplot file

DebugvisuLevel=2                      ! Level 0: visualization of linear mesh and BC (default),
                                      ! Level 1: + curved surface visualization (_SplineSurf.*), if useCurveds
                                      ! Level 2: + curved volume visualization (_SplineVol.*), if useCurveds

Visu_sJ_limit = 1.0                   ! for DebugvisuLevel=2, only write elements with a scaled Jacobian < given limit
NVisu         = 5                     ! number of visualization points  per element edge, if useCurved
outputFormat  = 1                     ! 0: paraview, 1: tecplot ascii, 2: cgns

checkElemJacobians=T                  ! checks the Jacobian and scaled Jacobian for each element
! =============================================================================== !
! MESH
! =============================================================================== !
Mode          = 3                     ! 1 Cartesian 3 CGNS 4 STAR-CD V3
nZones        = 5                     ! number of zones
nMeshFiles    = 1                     ! number of meshfiles
FileName      = NACA0012_icem_32elems.cgns            ! (max. factor 8)
! FileName      = NACA0012_icem_viscous_32elems.cgns    ! name of BLOCK-STRUCTURED CGNS mesh file (max. factor 4)

meshscale     = 0.001                 ! scales all input meshes by a factor
spacequandt   = 10000.                ! tolerance for mesh connectivity (multiplicates with real tolerance)

!=============================================================================== !
! CURVING BY AGGLOMERATION
!=============================================================================== !
useCurveds    = T                     ! T if curved boundaries defined
MeshIsAlreadyCurved=T                 ! this enables the agglomeration
BoundaryOrder = 3                     ! =3: agglomerates 2x2x2 linear elements to 1 curved element
                                      ! =5: agglomerates 4x4x4 linear elements to 1 curved element

nskip         = 2                     ! coarsen block-structured meshes: skip points 1: no skip, 2: use every second point ...
nskipZ        = 2                     ! if mesh is z-extruded, a different skip can be given in z-direction

!=============================================================================== !
! BOUNDARY CONDITIONS
!=============================================================================== !
BoundaryName = BC_OUTFLOW
BoundaryType = (/2,0,1,0/)
BoundaryName = BC_INFLOW
BoundaryType = (/2,0,1,0/)
BoundaryName = BC_WALL
BoundaryType = (/4,1,1,0/)
BoundaryName = BC_ZMINUS
BoundaryType = (/2,0,0,1/)
BoundaryName = BC_ZPLUS
BoundaryType = (/2,0,0,-1/)
BoundaryName = DEFAULT
BoundaryType = (/0,0,0,0/)

nCurvedBoundaryLayers = 1

!=============================================================================== !
! CORRECTION FOR Z-EXTRUDED MESHES ONLY!
!=============================================================================== !
dozcorrection = F                     ! align all elements exactly along z-direction (to suppress grid generator tolerances)
zLength       = 1.0                   ! change length of domain in z direction
zstart        = 0.                    ! change minimum z-coordinate
nElemsZ       = 1                     ! the number of curved elements
zperiodic     = T                     ! change z_plus und z_minus boundary conditions to periodic BCs
